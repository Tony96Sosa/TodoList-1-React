{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","App.js","index.js"],"names":["Todo","todo","taskDelete","taskCompleted","setTaskEdit","id","title","description","completed","className","onClick","TodoList","tasks","length","map","tarea","key","initialForm","TodoForm","taskAdd","taskEdit","taskUpdate","useState","form","setForm","error","setError","success","setSuccess","useEffect","handleChange","e","formUpdate","target","name","value","onSubmit","preventDefault","trim","setTimeout","type","placeholder","onChange","initialTasks","localTasks","JSON","parse","localStorage","getItem","App","setTasks","setItem","stringify","task","Date","now","taskChange","tareaId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e771f63.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Todo.css';\r\n\r\nconst Todo = ({ todo, taskDelete, taskCompleted, setTaskEdit }) => {\r\n    const { id, title, description, completed } = todo;\r\n    return(\r\n        <div className='card mt-2'>\r\n            <div className='card-body'>\r\n                <h3 className='card-title '>\r\n                    { title }\r\n                    <button \r\n                        onClick={ () => taskCompleted(id) }\r\n                        className={`btn btn-sm ${completed ? 'btn-outline-success' : 'btn-success' } ml-2`} >\r\n                        {\r\n                            completed ? 'Finalizado' : 'Terminar'\r\n                        }\r\n                    </button>\r\n                </h3>\r\n                <p className='card-text'>\r\n                    { description }\r\n                </p>\r\n                <hr/>\r\n                <div className='d-flex justify-content-start'>\r\n                    <button \r\n                        onClick={ () => setTaskEdit(todo) }\r\n                        className='btn btn-sm btn-outline-primary mr-2'>\r\n                        Editar\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => taskDelete(id) }\r\n                        className='btn btn-sm btn-outline-danger'>\r\n                        Eliminar\r\n                    </button>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from '../Todo/Todo';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ tasks, taskDelete, taskCompleted, setTaskEdit }) => {\r\n    return(\r\n        <div>\r\n            <h1 className='text-center display-4'>Tareas</h1>\r\n            {\r\n                tasks.length ===  0\r\n                ? (\r\n                    <div className='alert alert-primary'>\r\n                        No hay Tareas, Agregue una nueva Tarea.\r\n                    </div>\r\n                )\r\n                : (\r\n                    tasks.map( (tarea) => (\r\n                        <Todo \r\n                            key={ tarea.id } \r\n                            todo={ tarea }\r\n                            taskDelete={ taskDelete } \r\n                            taskCompleted={ taskCompleted }\r\n                            setTaskEdit={ setTaskEdit }\r\n                        />\r\n                    ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\r\nimport './TodoForm.css';\r\n\r\nconst initialForm = {\r\n    title: '',\r\n    description: '',\r\n}\r\nconst TodoForm = ({ taskAdd, taskEdit, taskUpdate, setTaskEdit }) => {\r\n    const [ form,  setForm ] = useState(initialForm);\r\n    const { title, description } = form;\r\n    const [ error, setError ] = useState(null);\r\n    const [ success, setSuccess ] = useState(null);\r\n\r\n    useEffect( () => {\r\n        if(taskEdit){\r\n            setForm(taskEdit);\r\n        }else{\r\n            setForm(initialForm);\r\n        }\r\n    },[taskEdit])\r\n \r\n    const handleChange =  (e) => {\r\n        const formUpdate = {\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setForm(formUpdate);\r\n    }\r\n\r\n    const handleSubmit = (e)  => {\r\n        e.preventDefault();\r\n        if(title.trim() === ''){\r\n            setError('Debe ingresar un Titulo a su Tarea.');\r\n            return;\r\n        }\r\n        if(description.trim() === ''){\r\n            setError('Debe ingresar un Descripci贸n a su Tarea.');\r\n            return;\r\n        }\r\n        if(taskEdit){\r\n            taskUpdate(form);\r\n            setSuccess('Su Tarea se Actualizo Exitosamente.');\r\n        }else{\r\n            taskAdd(form);\r\n            setForm(initialForm);\r\n            setSuccess('Su Tarea se Agrego Exitosamente.');\r\n        }\r\n        setError(null);\r\n        setTimeout( () => {\r\n            setSuccess(null);\r\n        }, 2000);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2 className='text-center display-5' >{ taskEdit ? 'Editar Tarea' : 'Nueva Tarea'}</h2>\r\n            {\r\n                taskEdit && (\r\n                    <button \r\n                        onClick={() => setTaskEdit(null)}\r\n                        className='btn btn-sm btn-warning mb-2'>\r\n                        Cancelar Edici贸n\r\n                    </button>\r\n                )\r\n            }\r\n            {\r\n                error && (\r\n                    <div className='alert alert-danger mb-2'>{ error }</div>\r\n                )\r\n            }\r\n            {\r\n                success && (\r\n                    <div className='alert alert-success mb-2'>{ success }</div>\r\n                )\r\n            }\r\n            <form onSubmit={ handleSubmit } >\r\n                <input \r\n                    type='text'\r\n                    placeholder='Titulo'\r\n                    className='form-control'\r\n                    value={ title }\r\n                    name='title'\r\n                    onChange={handleChange}\r\n                />\r\n                <textarea \r\n                    placeholder='Descripci贸n'\r\n                    className='form-control mt-2'\r\n                    value={ description }\r\n                    name='description'\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    className='btn btn-primary btn-block mt-2'\r\n                >\r\n                    { taskEdit ? 'Actualizar Tarea' : 'Agregar Tarea'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React, { useEffect, useState } from 'react';\nimport TodoList from './components/TodoList/TodoList';\nimport TodoForm from './components/TodoForm/TodoForm';\nimport './App.css';\n\nconst initialTasks = [\n  {\n      id: 1,\n      title: 'Todo #1',\n      description: 'Descripci贸n del Todo #1',\n      completed: false,\n  },\n  {\n      id: 2,\n      title: 'Todo #2',\n      description: 'Descripci贸n del Todo #2',\n      completed: true,\n  }\n];\nconst localTasks = JSON.parse(localStorage.getItem('Tasks'));\nconst App = ()  => {\n  const [ tasks, setTasks ] = useState(localTasks || initialTasks);\n  const [ taskEdit, setTaskEdit ] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('Tasks', JSON.stringify(tasks));\n  },[tasks]);\n\n  const taskDelete = (tareaId) => {\n    if(taskEdit && tareaId === taskEdit.id){\n      setTaskEdit(null);\n    }\n    const taskUpdate = tasks.filter( (tarea) => tarea.id !== tareaId)\n    setTasks(taskUpdate);\n  };\n\n  const taskCompleted = (tareaId) => {\n    const taskUpdate = tasks.map( (tarea) => (\n      tarea.id === tareaId\n      ? { ...tarea, completed: !tarea.completed }\n      : tarea\n    ))\n\n    setTasks(taskUpdate);\n  }\n\n  const taskAdd =  (task) => {\n    const newTask = {\n      id: Date.now(),\n      ...task,\n      completed: false,\n    }\n    const taskUpdate = [\n      newTask,\n      ...tasks\n    ]\n    setTasks(taskUpdate);\n  }\n\n  const taskUpdate = (taskEdit) => {\n    const taskChange = tasks.map((tarea) => (\n      tarea.id === taskEdit.id \n      ? taskEdit \n      : tarea\n    ))\n    setTasks(taskChange);\n  }\n\n  return (\n    <div className=\"box container mt-4\">\n      <div className=\"row\">\n      <div className=\"TodoForm-continer\">\n          <TodoForm \n            taskAdd={ taskAdd }\n            taskEdit={ taskEdit }\n            taskUpdate={ taskUpdate }\n            setTaskEdit={ setTaskEdit }\n          />\n        </div>\n        <div className=\"TodoList-continer\">\n          <TodoList \n            tasks={ tasks }\n            taskDelete={ taskDelete }\n            taskCompleted={ taskCompleted }  \n            setTaskEdit={ setTaskEdit }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}